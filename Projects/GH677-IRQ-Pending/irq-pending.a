;ACME 0.96.4

!cpu 6502	; Compatible with all Apple2's
!to "irq-pending", plain
!sl "irq-pending.labels"
*=$6000

;------------------------------------------------------------------------------

!source "AppleDefs.a"
!source "MockingboardDefs.a"

;------------------------------------------------------------------------------

MBBase	= $fc		; Mockingboard base (only used in INIT - not in INTERRUPT)
MBBaseL	= MBBase
MBBaseH	= MBBase+1


!zone code

entrypoint:
	lda		#0
	sta		irqTimer1Flag

	lda		$fc
	sta		saveFC
	lda		$fd
	sta		saveFD
	lda		$fe
	sta		saveFE
	lda		$ff
	sta		saveFF

	;

	jsr		SF_GetMBSlot
	bne		+

		; MB not found!
		lda		#<msg_NoMB
		sta		$fe
		lda		#>msg_NoMB
		sta		$ff
		jsr		print
		jmp		exit

+
	; Setup correct address in IRQ handler code:
	stx		MBIRQ1+2
	stx		MBIRQ2+2

	;

	sei

	lda		#$ff
	ldy		#SY6522_TIMER1L_COUNTER
	sta		(MBBase),y
	lda		#$ff
	ldy		#SY6522_TIMER1H_COUNTER
	sta		(MBBase),y

	lda		#1<<6
	ldy		#SY6522_ACR
	sta		(MBBase),y				; Free running timer

	lda		#1<<7 | 1<<6
	ldy		#SY6522_IER	
	sta		(MBBase),y				; Enable Timer1 IRQ

	lda		#<Interrupt				; ADDR_L
	sta		IRQL
	lda		#>Interrupt				; ADDR_H 
	sta		IRQH

;;;	cli		; don't use IRQ, instead poll

	;

loop:		lda 	$c000
			bmi		exitKey


			ldy		#SY6522_IFR
			lda		(MBBase),y
			and		#1<<6			; Poll Timer1 IRQ flag
			beq		loop
			
		cli							; Allow IRQ to be taken
		sei

		lda		irqTimer1Flag
		bne		+
			brk

+		dec		irqTimer1Flag

		lda		#<msg0
		sta		$fe
		lda		#>msg0
		sta		$ff
		jsr		print

		jmp loop

	;

exitKey:
	lda 	$c010

	lda		#1<<6
	ldy		#SY6522_IER
	sta		(MBBase),y				; Disable Timer1 IRQ
	ldy		#SY6522_IFR
	sta		(MBBase),y				; Clear any Timer1 IRQ

exit:
	lda		saveFC
	sta		$fc
	lda		saveFD
	sta		$fd
	lda		saveFE
	sta		$fe
	lda		saveFF
	sta		$ff

	rts

;--------------------------------------

; Pre: ($FE) = msg
print
	ldy		#0
.loop	lda		($fe),y
		beq		.pdone
		ora		#$80	; set high bit
		tax
		tya
		pha
		txa
		jsr		COUT
		pla
		tay
		iny
		bne 	.loop
.pdone
	rts

;--------------------------------------

; Skyfox MB detection routine:

SF_GetMBSlot:
; Pre:
; Post:
;  Z = 0 (NE) : MB detected
;  X = HI(MB base address)
;  (MBBase) = MB slot address
;

	jsr		SF_Detect

.Loop:	stx		$ff
		jsr		SF_Detect
		cpx		$ff
		bne		.Loop

	cpx		#$C8
	rts

;

SF_Detect:
	lda		#0
	sta		MBBaseL
	lda		#$c1
	sta		MBBaseH
	ldx		#7

.SlotNext:
		ldy		#$00+SY6522_TIMER1L_COUNTER
		jsr		SF_GetTimerL
		bne		.SlotLoop

		ldy		#$80+SY6522_TIMER1L_COUNTER
		jsr		SF_GetTimerL
		beq		.SlotDone

.SlotLoop:
		inc		MBBaseH
		dex
		bne		.SlotNext

.SlotDone:
	ldx		MBBaseH
	rts

;


SF_GetTimerL:
	lda		(MBBase),y
	cmp		MBBaseL
	sbc		(MBBase),y
	cmp		#$08
	rts

;------------------------------------------------------------------------------

!zone data

irqTimer1Flag:	!byte 0
saveFC:			!byte 0
saveFD:			!byte 0
saveFE:			!byte 0
saveFF:			!byte 0

msg0 !text "MB Timer1 IRQ detected",0xd,0xa
msg0End !text 0

msg_NoMB !text "No Mockingboard detected!",0xd,0xa
msg_NoMBEnd !text 0

;------------------------------------------------------------------------------

!zone code

Interrupt:	
; Pre:
;	6502 has pushed P
;	Apple ROM has stored A to $45 (not Apple //e ROM!)
;

	txa 
	pha
	tya
	pha

	;------

MBIRQ1:
	lda		CARD_BASE+SY6522_IFR
	and		#1<<6
	bne		+
		brk

+		lda		#1
		sta		irqTimer1Flag
		
		lda		#1<<6
MBIRQ2:	sta		CARD_BASE+SY6522_IFR	; Clear Timer1 IRQ flag

	;------

	pla
	tay
	pla
	tax

	lda		$45
	rti
