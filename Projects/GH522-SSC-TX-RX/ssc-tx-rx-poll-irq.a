;ACME 0.96.3

!cpu 6502	; Compatible with all Apple2's
!to "ssc-tx-rx-poll-irq", plain
!sl "ssc-tx-rx-poll-irq.labels"
*=$6000

;------------------------------------------------------------------------------

!source "AppleDefs.a"
!source "SSCDefs.a"

;------------------------------------------------------------------------------

!zone code

entrypoint:	
	lda		#0
	sta		irqTxDoneFlag
	sta		irqRxFlag

	lda		$fe
	sta		saveFE
	lda		$ff
	sta		saveFF
	
	sei
	lda		#<Interrupt				; ADDR_L
	sta		IRQL
	lda		#>Interrupt				; ADDR_H 
	sta		IRQH
	cli

	;
	;;; Test TX
	;
	
	; Use TX polling

	lda		SSC_COMMAND
	sta		oldCommand
	and		#!CMD_TX_MASK
	ora		#CMD_TX_IRQ_DIS_RTS_LOW
	sta		SSC_COMMAND

	ldx		#0
loop1	lda		msg1,x
		beq		.done1
		sta		SSC_TX
-		lda		SSC_STATUS
		and		#ST_TX_EMPTY
		beq		-
		inx
		bne		loop1
.done1

	; Use TX IRQ
	
	lda		SSC_COMMAND
	and		#!CMD_TX_MASK
	ora		#CMD_TX_IRQ_ENA_RTS_LOW
	sta		SSC_COMMAND

	ldx		#0
loop2	lda		msg2,x
		beq		.done2
		sta		SSC_TX
-		lda		irqTxDoneFlag
		beq		-
		dec		irqTxDoneFlag
		inx
		bne		loop2
.done2

	;
	;;; Test RX
	;

	; Use RX polling

	lda		#<msg3
	sta		$fe
	lda		#>msg3
	sta		$ff
	jsr		print

	lda		SSC_COMMAND
	and		#!CMD_TX_MASK
	ora		#CMD_RX_IRQ_DIS|CMD_TX_IRQ_DIS_RTS_LOW		; Disable Rx & Tx IRQs
	sta		SSC_COMMAND
	
loop3	lda		SSC_STATUS
		and		#ST_RX_FULL
		beq		loop3
		lda		SSC_RX
		cmp		#'x'
		beq		.done3
		cmp		#'X'
		beq		.done3
		ora		#$80	; set high bit
		jsr		COUT
		jmp		loop3
.done3

	;

	; Use RX IRQ

	lda		#<msg4
	sta		$fe
	lda		#>msg4
	sta		$ff
	jsr		print

	lda		SSC_COMMAND
	and		#!CMD_RX_IRQ_DIS		; Enable Rx IRQ
	sta		SSC_COMMAND

loop4	lda		irqRxFlag
		beq		loop4
		dec		irqRxFlag
		lda		SSC_RX				; Clears ST_RX_FULL
		cmp		#'x'
		beq		.done4
		cmp		#'X'
		beq		.done4
		ora		#$80	; set high bit
		jsr		COUT
		jmp		loop4
.done4

	lda		SSC_COMMAND
	ora		#CMD_RX_IRQ_DIS			; Disable Rx IRQ
	sta		SSC_COMMAND

	;

	lda		saveFE
	sta		$fe
	lda		saveFF
	sta		$ff

	lda		oldCommand
	sta		SSC_COMMAND
	rts
	
	;

; Pre: ($FE) = msg
print
	ldy		#0
.loop	lda		($fe),y
		beq		.pdone
		ora		#$80	; set high bit
		tax
		tya
		pha
		txa
		jsr		COUT
		pla
		tay
		iny
		bne 	.loop
.pdone
	rts
	
	;

;------------------------------------------------------------------------------

!zone data

irqTxDoneFlag:	!byte 0
irqRxFlag:		!byte 0
oldCommand:		!byte 0
saveFE:			!byte 0
saveFF:			!byte 0

msg1 !text "Hello world! (Polling)",0xd,0xa
msg1End !text 0
msg2 !text "Hello world! (IRQ)",0xd,0xa
msg2End !text 0
msg3 !text "Receive chars by polling ('x' to exit)",0xd
msg3End !text 0
msg4 !text 0xd,"Receive chars by IRQ ('x' to exit)",0xd
msg4End !text 0

;------------------------------------------------------------------------------

!zone code

Interrupt:	
; Pre:
;	6502 has pushed P
;	Apple ROM has stored A to $45 (not Apple //e ROM!)
;

	txa 
	pha
	tya
	pha

	lda		SSC_STATUS	; Clear IRQ flag
	tax
	bmi		+			; b7=ST_IRQ
	brk		; error

+	and		#ST_TX_EMPTY|ST_RX_FULL
	bne		+
	brk		; error

+	lda		SSC_COMMAND
	tay
	and		#CMD_TX_MASK
	cmp		#CMD_TX_IRQ_ENA_RTS_LOW
	bne		+
	txa
	and		#ST_TX_EMPTY
	beq		+
		lda		#1
		sta		irqTxDoneFlag

+	tya
	and		#CMD_RX_IRQ_DIS
	bne		+
	txa
	and		#ST_RX_FULL
	beq		+
		lda		#1
		sta		irqRxFlag

+	lda		irqTxDoneFlag
	ora		irqRxFlag
	bne		+
	brk		; error

+	pla
	tay
	pla
	tax

	lda		$45
	rti
